{"version":3,"sources":["context/AuthContext.js","services/api.js","components/NavBar.js","pages/Login.js","pages/Register.js","pages/Verify.js","components/Task.js","sounds/notification.mp3","pages/Tasks.js","App.js","index.js"],"names":["initialState","authBaseUrl","taskBaseUrl","doRegister","email","firstName","lastName","username","password","a","axios","post","response","status","data","doVerify","token","code","headers","doLogin","getNotes","get","doCreateNote","title","description","doRemoveNote","id","delete","localStorage","getItem","JSON","parse","verified","e","AuthContext","createContext","register","verify","login","logout","AuthContextProvider","children","useState","auth","setAuth","useEffect","setItem","stringify","passwordConf","res","Provider","value","NavBar","authContext","useContext","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Row","Col","md","Nav","Link","NavDropdown","Item","Button","variant","onClick","Login","useStateIfMounted","loading","setLoading","setUsername","setPassword","alert","setAlert","handleLogin","preventDefault","setTimeout","to","xs","Card","Form","Group","controlId","Control","placeholder","onChange","target","required","className","type","CircularProgress","color","Alert","open","onClose","severity","sx","borderRadius","marginTop","maxWidth","Register","setFirstName","setLastName","setEmail","passwordConfirm","setPasswordConfirm","handleRegister","length","String","toLowerCase","match","includes","Text","setCode","handleVerify","Task","startHandler","deleteHandler","progress","padding","Tasks","tasks","setTasks","setTitle","setDescription","task","setTask","TaskProgress","setTaskProgress","breakTask","setBreakTask","breakProgress","setBreakProgress","completed","setCompleted","cycle","setCycle","audio","setAudio","snack","setSnack","then","catch","console","log","startBreak","startCompleted","startTask","createTask","concat","removeTask","filter","error","map","t","i","Modal","Box","position","top","left","transform","width","bgcolor","border","boxShadow","p","Typography","component","mt","LinearProgress","currentTaskTitle","style","marginBottom","Snackbar","autoHideDuration","message","preload","playing","onEnd","src","notification","App","path","element","Verify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efb45120.chunk.js","sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {doLogin, doRegister, doVerify} from '../services/api';\n\n// == constants == //\n\n/**\n * default initial state\n */\nlet initialState;\n\ntry {\n  initialState = localStorage.getItem('auth') ? JSON.parse(localStorage.getItem('auth')) : {\n    token: null,\n    verified: null,\n    username: null,\n  };\n} catch (e) {\n  initialState = {\n    token: null,\n    verified: null,\n    username: null,\n  };\n}\n\n// == auth context == //\n\n/**\n * auth context\n *\n * @type {React.Context<{logout: logout, verify: verify, login: login, register: register}>}\n */\nconst AuthContext = createContext({\n  register: () => {},\n  verify: () => {},\n  login: () => {},\n  logout: () => {},\n  token: () => false,\n  verified: () => false,\n  username: () => false\n});\n\n// == provider == //\n\n/**\n * context provider\n *\n * @param children\n * @returns {JSX.Element}\n * @constructor\n */\nconst AuthContextProvider = ({ children }) => {\n\n  /* state */\n\n  const [auth, setAuth] = useState(initialState);\n\n  /* hooks */\n\n  /**\n   * update local storage everytime auth changes\n   */\n  useEffect(() => {\n    localStorage.setItem('auth', JSON.stringify(auth));\n  }, [auth]);\n\n  /* handlers */\n\n  /**\n   * tries to register a user\n   *\n   * @param email\n   * @param firstName\n   * @param lastName\n   * @param username\n   * @param password\n   * @param passwordConf\n   * @returns {Promise<void>}\n   */\n  const register = async (email, firstName, lastName, username, password, passwordConf) => {\n\n    if (password !== passwordConf) {\n      return;\n    }\n\n    const res = await doRegister(email, firstName, lastName, username, password);\n\n    if (res.status === 201) {\n      setAuth({\n        ...auth,\n        token: res.data.token,\n        verified: false,\n        username: username\n      });\n    }\n  };\n\n  /**\n   * verifies an account\n   *\n   * @param code\n   * @returns {Promise<void>}\n   */\n  const verify = async (code) => {\n\n    if (!auth.token) {\n      return;\n    }\n\n    const res = await  doVerify(auth.token, code);\n\n    if (res.status === 200) {\n      setAuth({\n        ...auth,\n        verified: true,\n      });\n    }\n  };\n\n  /**\n   * tries to log a user in\n   *\n   * @param username  username\n   * @param password  password\n   */\n  const login = async (username, password) => {\n\n    if (!username || !password) {\n      throw ({ response: { status: 401 }});\n    }\n\n    const res = await doLogin(username, password);\n\n    if (res.status === 200) {\n      setAuth({\n        ...auth,\n        token: res.data.token,\n        verified: res.data.verified,\n        username\n      });\n    }\n  };\n\n  /**\n   * logs the current user out\n   */\n  const logout = () => {\n    setAuth({\n      token: null,\n      verified: null,\n      username: null,\n    });\n  };\n\n  /* return */\n\n  return (\n    <AuthContext.Provider value={{\n      register,\n      verify,\n      login,\n      logout,\n      token: auth.token,\n      verified: auth.verified,\n      username: auth.username\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n\n};\n\n// == prototyping == //\n\nAuthContextProvider.propTypes = {\n  children: PropTypes.any\n};\n\n// == export == //\n\nexport default AuthContext;\nexport {\n  AuthContextProvider\n};\n","/**\n * file to handle api calls related to user\n *\n * @version 1.0.0\n */\n\n/* imports */\n\nimport axios from 'axios';\n\n/* constants */\n\nconst authBaseUrl = '/api/auth';\nconst taskBaseUrl = '/api/task';\n\n/* functions */\n\n/**\n * tries to register a user with the api\n *\n * @param email     email\n * @param firstName first name\n * @param lastName  last name\n * @param username  username\n * @param password  password\n * @returns {Promise<number|any>}\n */\nconst doRegister = async (email, firstName, lastName, username, password) => {\n\n  const response = await axios.post(`${authBaseUrl}/register`, {\n    email,\n    firstName,\n    lastName,\n    username,\n    password\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * tries to verify a user with the api\n *\n * @param token token\n * @param code  code\n * @returns {Promise<boolean|*>}\n */\nconst doVerify = async (token, code) => {\n\n  const response = await axios.post(`${authBaseUrl}/verify`, {\n    code\n  }, {\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * resends the verification code\n *\n * @param token auth token\n * @returns {Promise<number|*>}\n */\nconst doResendVerify = async (token) => {\n\n  const response = await axios.post(`${authBaseUrl}/verify/resend`, null, {\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * tries to log a user in\n *\n * @param username\n * @param password\n * @returns {Promise<any>}\n */\nconst doLogin = async (username, password) => {\n\n  const response = await axios.post(`${authBaseUrl}/login`, {\n    username,\n    password\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * gets the notes from a user\n *\n * @param token token\n * @returns {Promise<{data: any, status: number}>}\n */\nconst getNotes = async (token) => {\n  const response = await axios.get(`${taskBaseUrl}`, {\n    headers: {\n      'Authorization': token\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\n/**\n * creates a new note\n *\n * @param token\n * @param title\n * @param description\n * @returns {Promise<{data: any, status: number}>}\n */\nconst doCreateNote = async (token, title, description) => {\n  const response = await axios.post(`${taskBaseUrl}`, {\n    title,\n    description,\n  }, {\n    headers: {\n      'Authorization': token\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\nconst doRemoveNote = async (token, id) => {\n  const response = await axios.delete(`${taskBaseUrl}`, {\n    headers: {\n      'Authorization': token\n    },\n    data: {\n      id\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\n/* exports */\n\nexport {\n  doRegister,\n  doVerify,\n  doResendVerify,\n  doLogin,\n  getNotes,\n  doCreateNote,\n  doRemoveNote,\n};","import React, {useContext} from 'react';\nimport {Container, Navbar, Nav, Button, Col, Row, NavDropdown} from 'react-bootstrap';\n\nimport AuthContext from '../context/AuthContext';\n\nimport '../styles/components/NavBar.css';\n\n\nconst NavBar = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* return */\n\n  return (\n    <Navbar bg={'light'} expand={'md'} id={'navbar'}>\n\n      <Container>\n\n        <Navbar.Brand href={'/'} id={'brand'}>TodoDoro</Navbar.Brand>\n        <Navbar.Toggle aria-controls={'basic-navbar-nav'} />\n        <Navbar.Collapse id={'basic-navbar-nav'}>\n\n          <Container>\n\n            <Row>\n\n              <Col md={'auto'}>\n                <Nav.Link href={'/'}>Home</Nav.Link>\n              </Col>\n\n              <Col md={'auto'}>\n                <Nav.Link href={'/'}>Tasks</Nav.Link>\n              </Col>\n\n              {authContext.token && authContext.username && <Col md={'auto'}>\n\n                <NavDropdown title={'Account'}>\n\n                  <NavDropdown.Item>Hello, {authContext.username}</NavDropdown.Item>\n                  {authContext.verified || <NavDropdown.Item>Verify</NavDropdown.Item>}\n                  <NavDropdown.Item>Settings</NavDropdown.Item>\n\n                </NavDropdown>\n\n              </Col>}\n\n            </Row>\n\n          </Container>\n\n          { authContext.token ? '' : <Nav.Link href={'/register'}>Register</Nav.Link> }\n\n          <Button\n            id={'button'}\n            variant={'outline-danger'}\n            href={authContext.token ? '' : '/login'}\n            onClick={authContext.token ? authContext.logout : () => {}}\n          >\n            { authContext.token ? 'Logout' : 'Login' }\n          </Button>\n\n        </Navbar.Collapse>\n\n      </Container>\n\n    </Navbar>\n  );\n\n};\n\nexport default NavBar;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\nimport {useStateIfMounted} from 'use-state-if-mounted';\n\nconst Login = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useStateIfMounted(false);\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [alert, setAlert] = useState('');\n\n  /* handlers */\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    if (loading) return;\n\n    setLoading(true);\n\n    try {\n      await authContext.login(username, password);\n\n    } catch (e) {\n\n      if (e.response.status === 401) {\n        setAlert('Invalid username or password');\n\n      } else {\n        setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n      }\n\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n    setLoading(false);\n  };\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                Welcome back!\n              </h3>\n\n              <Form.Group controlId={'username'} id={'in'}>\n                <Form.Control\n                  placeholder={'Enter username'}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" type=\"submit\"\n                  onClick={async (e) => await handleLogin(e)}>\n                  Login\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default Login;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Register = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState('');\n\n  const [username, setUsername] = useState(null);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [passwordConfirm, setPasswordConfirm] = useState(null);\n\n  /* handlers */\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    if (loading) return;\n    if (password !== passwordConfirm) {\n      setAlert('Passwords don\\'t match');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n    if (password.length < 8) {\n      setAlert('Password should be at least 8 characters long');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n    if (!String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      )) {\n      setAlert('Invalid email');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await authContext.register(email, firstName, lastName, username, password, passwordConfirm);\n\n    } catch (e) {\n\n      if (e.response.status === 400) {\n\n        if (e.response.data.includes('email: Error') && e.response.data.includes('username: Error')) {\n          setAlert('Both the username and email have to be unique');\n\n        } else if (e.response.data.includes('email: Error')) {\n          setAlert('This email is already taken');\n\n        } else if (e.response.data.includes('username: Error')) {\n          setAlert('This username is already taken');\n\n        } else {\n          setAlert('Invalid email');\n        }\n      } else {\n        setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n      }\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n\n    setLoading(false);\n  };\n\n  /* return */\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                Welcome to TodoDoro!\n              </h3>\n\n              <p>\n                {'We can\\'t wait to have you with us! Fill out with your information and we\\'ll be done in no time.'}\n              </p>\n\n              <Form.Group controlId={'email'} id={'in'}>\n                <Form.Control\n                  placeholder={'Email'}\n                  onChange={(e) => setEmail(e.target.value)}\n                  type={'email'}\n                  required\n                />\n                <Form.Text>Please enter a valid email. We will send you a verification code. We will never share your information.</Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId={'firstName'} id={'in'}>\n                <Form.Control\n                  placeholder={'First name'}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId={'lastName'} id={'in'}>\n                <Form.Control\n                  placeholder={'Last name'}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId={'username'} id={'in'}>\n                <Form.Control\n                  placeholder={'Username'}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"passwordConfirm\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Retype password\"\n                  onChange={(e) => setPasswordConfirm(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button\n                  id={'button'}\n                  variant=\"danger\"\n                  type=\"submit\"\n                  onClick={(e) => handleRegister(e)}\n                >\n                  Register\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default Register;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Login = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState('');\n  const [code, setCode] = useState('');\n\n  /* handlers */\n\n  const handleVerify = async (e) => {\n    e.preventDefault();\n\n    if (code.length !== 8) {\n      setAlert('Invalid code!');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await authContext.verify(code);\n\n    } catch (e) {\n\n      if (e.response.status === 403) {\n\n        if (e.response.data.includes('code expired')) {\n          setAlert('Code expired');\n\n        } else if (e.response.data.includes('invalid code')) {\n          setAlert('Invalid code');\n\n        } else {\n          setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n        }\n      }\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n    setLoading(false);\n  };\n\n  /* return */\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  if (!authContext.token) {\n    return (\n      <Navigate to={'/login'} />\n    );\n  }\n\n  return (\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                One last step!\n              </h3>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  placeholder=\"Code\"\n                  onChange={(e) => setCode(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" type=\"submit\"\n                  onClick={async (e) => await handleVerify(e)}>\n                  Verify\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport {Button, Card, Container} from 'react-bootstrap';\nimport {CircularProgress} from '@mui/material';\nimport PropTypes from 'prop-types';\n\nimport '../styles/components/Task.css';\n\nconst Task = ({ startHandler, deleteHandler, id, title, description, progress }) => {\n\n  /* context */\n\n  return (\n    <Card id={'task'} >\n\n      <Container id={'container'}>\n\n        <div id={'header'}>\n\n          <Button id={'titleButton'} variant=\"danger\" onClick={() => startHandler(id)}>\n\n            <div id={'titleContainer'}>\n\n              <CircularProgress color={'inherit'} variant=\"determinate\" value={progress} id={'bar'} sx={{\n                padding: '.2rem'\n              }}/>\n\n              <h5>\n                {title}\n              </h5>\n\n            </div>\n\n          </Button>\n\n          <button id={'delButton'} onClick={() => deleteHandler(id)}>\n            X\n          </button>\n\n        </div>\n\n        { description && <p>\n          {description}\n        </p>}\n\n      </Container>\n\n    </Card>\n  );\n};\n\nTask.propTypes = {\n  startHandler: PropTypes.func.isRequired,\n  deleteHandler: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  progress: PropTypes.number\n};\n\nexport default Task;","export default __webpack_public_path__ + \"static/media/notification.d9cddb63.mp3\";","import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Tasks.css';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\nimport {doCreateNote, doRemoveNote, getNotes} from '../services/api';\nimport {Alert, Box, CircularProgress, LinearProgress, Modal, Snackbar, Typography} from '@mui/material';\nimport Task from '../components/Task';\nimport ReactHowler from 'react-howler';\nimport notification from '../sounds/notification.mp3';\n\nconst Tasks = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* state */\n\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [task, setTask] = useState(null);\n  const [TaskProgress, setTaskProgress] = useState(0);\n  const [breakTask, setBreakTask] = useState(null);\n  const [breakProgress, setBreakProgress] = useState(0);\n  const [completed, setCompleted] = useState(null);\n  const [cycle, setCycle] =  useState(1);\n\n  const [audio, setAudio] = useState(false);\n  const [alert, setAlert] = useState('');\n  const [snack, setSnack] = useState('');\n\n  /* hooks */\n\n  useEffect(() => {\n\n    getNotes(authContext.token)\n      .then(res => {\n        setTasks(res.data);\n      })\n      .catch((e) => {\n        console.log(e);\n        setAlert('Something went wrong while fetching your tasks');\n      });\n  }, []);\n\n  if (task && !completed) {\n    setTimeout(() => {\n\n      if (TaskProgress !== 100) {\n        setTaskProgress(TaskProgress + 1);\n\n      } else {\n        startBreak(task);\n      }\n    }, 15000);\n  }\n\n  if (breakTask) {\n    setTimeout(() => {\n\n      if (breakProgress !== 100) {\n        setBreakProgress(breakProgress + 1);\n      } else {\n        startCompleted(breakTask);\n      }\n    }, cycle % 4 ? 3000 : 9000);\n  }\n\n  /* handlers */\n\n  const startTask = (id) => {\n\n    if (task) {\n\n      if (task === id) {\n        startBreak(task);\n\n      } else {\n        setCompleted(task);\n        setTask(id);\n      }\n      return;\n    }\n\n    setTaskProgress(0);\n    setTask(id);\n  };\n\n  const startBreak = () => {\n    setTaskProgress(100);\n    setAudio(true);\n    setTask(null);\n\n    if (breakTask) {\n      startCompleted(breakTask);\n    }\n\n    setBreakProgress(0);\n    setBreakTask(task);\n  };\n\n  const startCompleted = (id) => {\n    setAudio(true);\n    setCycle(cycle % 4 ? cycle + 1 : 1);\n    setBreakProgress(100);\n    setBreakTask(null);\n    setCompleted(id);\n  };\n\n  const createTask = async () => {\n\n    if (!title) {\n      setAlert('Please enter a title');\n      setTimeout(() => setAlert(''), 5000);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const res = await doCreateNote(authContext.token, title, description ? description : null);\n      setTasks(tasks.concat({\n        id: res.data.id,\n        title: res.data.title,\n        description: res.data.description,\n      }));\n      setTitle('');\n      setDescription('');\n      setSnack('Task created');\n\n    } catch (e) {\n      console.log(e);\n      setAlert('Something went wrong while creating a new task');\n      setTimeout(() => setAlert(''), 5000);\n    }\n    setLoading(false);\n  };\n\n  const removeTask = async (id) => {\n\n    try {\n      await doRemoveNote(authContext.token, id);\n      setTasks(tasks.filter((task) => task.id !== id));\n      setSnack('Task removed');\n\n    } catch (e) {\n      console.log(e.error);\n      setAlert('Something went wrong while deleting the task');\n      setTimeout(() => setAlert(''), 5000);\n    }\n\n  };\n\n  const currentTaskTitle = (id) => {\n\n    for (const task of tasks) {\n      if (task.id === id) {\n        return ` (${task.title})`;\n      }\n    }\n  };\n\n  /* redirect if not authenticated */\n\n  if (!authContext.token) {\n    return (\n      <Navigate to={'/login'} />\n    );\n  }\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  /* return tasks */\n\n  return (\n\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        {\n          tasks.map((t, i) => (\n            <Task\n              key={i}\n              startHandler={startTask}\n              deleteHandler={removeTask}\n              id={t.id}\n              title={t.title}\n              description={t.description}\n              progress={task && t.id === task ? TaskProgress : 100}\n            />\n          ))\n        }\n\n        <Card id={'create'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h4>\n                Create a new task!\n              </h4>\n\n              <Form.Group controlId={'title'} id={'in'}>\n                <Form.Control\n                  placeholder={'Enter a title'}\n                  onChange={(e) => setTitle(e.target.value)}\n                  value={title}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"description\" id={'in'}>\n                <Form.Control\n                  placeholder={'Enter a description (optional)'}\n                  onChange={(e) => setDescription(e.target.value)}\n                  value={description}\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" onClick={createTask}>\n                  Create\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n\n      <Modal\n        open={!!breakTask}\n        onClose={() => () => startCompleted(breakTask)}\n      >\n        <Box sx={{\n          borderRadius: '1rem',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          border: 'none',\n          boxShadow: 24,\n          p: 4,\n        }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Time to take a break!\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {'You have been working hard; take some to chill and recharge. We will notify you when it\\'s time to get back to work.'}\n          </Typography>\n\n          <br/>\n\n          <div id={'breakBar'}>\n            <LinearProgress variant={'determinate'} color={'inherit'} value={breakProgress} />\n          </div>\n\n          <br/>\n\n          <div>\n\n            <Button variant={'danger'} id={'genButton'} onClick={() => startCompleted(breakTask)}>Skip Break</Button>\n\n          </div>\n\n        </Box>\n      </Modal>\n\n      <Modal\n        open={!!completed}\n        onClose={() => () => setCompleted(null)}\n      >\n        <Box sx={{\n          borderRadius: '1rem',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          border: 'none',\n          boxShadow: 24,\n          p: 4,\n        }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Did you complete the task?\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {`Did you complete the task you have been working on${currentTaskTitle(completed)}?`}\n          </Typography>\n\n          <br/>\n\n          <Button\n            style={{\n              marginBottom: '.5rem'\n            }}\n            variant={'danger'}\n            id={'genButton'}\n            onClick={() => {\n              removeTask(completed).then(() => {\n                setCompleted(null);\n              });\n            }}\n          >\n            Yes! Go ahead and remove it.\n          </Button>\n\n          <Button\n            variant={'danger'}\n            id={'genButton'}\n            onClick={() => {\n              setCompleted(null);\n            }}\n          >\n            No! Keep it there.</Button>\n\n        </Box>\n      </Modal>\n\n      <Snackbar\n        open={!!snack}\n        autoHideDuration={5000}\n        onClose={() => setSnack('')}\n        message={snack}\n      />\n\n      <ReactHowler preload={true} playing={audio} onEnd={() => setAudio(false)} src={notification} />\n\n    </Row>\n\n  );\n};\n\nexport default Tasks;","import React from 'react';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport {AuthContextProvider} from './context/AuthContext';\nimport NavBar from './components/NavBar';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Verify from './pages/Verify';\nimport Tasks from './pages/Tasks';\n\nconst App = () => {\n  return (\n\n    <AuthContextProvider>\n\n      <NavBar/>\n\n      <Router>\n\n        <Routes>\n\n          <Route path={'/login'} element={\n            <Login/>\n          }/>\n\n          <Route path={'/register'} element={\n            <Register/>\n          }/>\n\n          <Route path={'/verify'} element={\n            <Verify/>\n          }/>\n\n          <Route path={'/tasks'} element={\n            <Tasks/>\n          }/>\n\n        </Routes>\n\n      </Router>\n\n    </AuthContextProvider>\n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}