{"version":3,"sources":["context/AuthContext.js","services/auth.js","components/NavBar.js","pages/Login.js","pages/Register.js","pages/Verify.js","App.js","index.js"],"names":["initialState","baseUrl","doRegister","email","firstName","lastName","username","password","a","axios","post","response","status","data","doVerify","token","code","headers","doLogin","localStorage","getItem","JSON","parse","verified","e","AuthContext","createContext","register","verify","login","logout","AuthContextProvider","children","useState","auth","setAuth","useEffect","setItem","stringify","passwordConf","res","console","log","Provider","value","NavBar","authContext","useContext","Navbar","bg","expand","id","Container","Brand","href","Toggle","Collapse","Row","Col","md","Nav","Link","NavDropdown","title","Item","Button","variant","onClick","Login","loading","setLoading","setUsername","setPassword","alert","setAlert","handleLogin","preventDefault","setTimeout","to","xs","Card","Form","Group","controlId","Control","placeholder","onChange","target","required","className","type","CircularProgress","color","Alert","open","onClose","severity","sx","borderRadius","marginTop","maxWidth","Register","setFirstName","setLastName","setEmail","passwordConfirm","setPasswordConfirm","handleRegister","length","String","toLowerCase","match","includes","Text","setCode","handleVerify","App","path","element","Verify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.831a20d5.chunk.js","sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {doLogin, doRegister, doVerify} from '../services/auth';\n\n// == constants == //\n\n/**\n * default initial state\n */\nlet initialState;\n\ntry {\n  initialState = localStorage.getItem('auth') ? JSON.parse(localStorage.getItem('auth')) : {\n    token: null,\n    verified: null,\n    username: null,\n  };\n} catch (e) {\n  initialState = {\n    token: null,\n    verified: null,\n    username: null,\n  };\n}\n\n\n\n// == auth context == //\n\n/**\n * auth context\n *\n * @type {React.Context<{logout: logout, verify: verify, login: login, register: register}>}\n */\nconst AuthContext = createContext({\n  register: () => {},\n  verify: () => {},\n  login: () => {},\n  logout: () => {},\n  token: () => false,\n  verified: () => false,\n  username: () => false\n});\n\n// == provider == //\n\n/**\n * context provider\n *\n * @param children\n * @returns {JSX.Element}\n * @constructor\n */\nconst AuthContextProvider = ({ children }) => {\n\n  /* state */\n\n  const [auth, setAuth] = useState(initialState);\n\n  /* hooks */\n\n  /**\n   * update local storage everytime auth changes\n   */\n  useEffect(() => {\n    localStorage.setItem('auth', JSON.stringify(auth));\n  }, [auth]);\n\n  /* handlers */\n\n  /**\n   * tries to register a user\n   *\n   * @param email\n   * @param firstName\n   * @param lastName\n   * @param username\n   * @param password\n   * @param passwordConf\n   * @returns {Promise<void>}\n   */\n  const register = async (email, firstName, lastName, username, password, passwordConf) => {\n\n    if (password !== passwordConf) {\n      return;\n    }\n\n    const res = await doRegister(email, firstName, lastName, username, password);\n\n    if (res.status === 201) {\n      setAuth({\n        ...auth,\n        token: res.data.token,\n        verified: false,\n        username: username\n      });\n    }\n  };\n\n  /**\n   * verifies an account\n   *\n   * @param code\n   * @returns {Promise<void>}\n   */\n  const verify = async (code) => {\n\n    if (!auth.token) {\n      return;\n    }\n\n    const res = await  doVerify(auth.token, code);\n\n    if (res.status === 200) {\n      setAuth({\n        ...auth,\n        verified: true,\n      });\n    }\n  };\n\n  /**\n   * tries to log a user in\n   *\n   * @param username  username\n   * @param password  password\n   */\n  const login = async (username, password) => {\n\n    if (!username || !password) {\n      throw ({ response: { status: 401 }});\n    }\n\n    const res = await doLogin(username, password);\n    console.log(res);\n\n    if (res.status === 200) {\n      setAuth({\n        ...auth,\n        token: res.data.token,\n        verified: res.data.verified,\n        username\n      });\n    }\n  };\n\n  /**\n   * logs the current user out\n   */\n  const logout = () => {\n    setAuth({\n      token: null,\n      verified: null,\n      username: null,\n    });\n  };\n\n  /* return */\n\n  return (\n    <AuthContext.Provider value={{\n      register,\n      verify,\n      login,\n      logout,\n      token: auth.token,\n      verified: auth.verified,\n      username: auth.username\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n\n};\n\n// == prototyping == //\n\nAuthContextProvider.propTypes = {\n  children: PropTypes.any\n};\n\n// == export == //\n\nexport default AuthContext;\nexport {\n  AuthContextProvider\n};\n","/**\n * file to handle api calls related to user\n *\n * @version 1.0.0\n */\n\n/* imports */\n\nimport axios from 'axios';\n\n/* constants */\n\nconst baseUrl = '/api/auth';\n\n/* functions */\n\n/**\n * tries to register a user with the api\n *\n * @param email     email\n * @param firstName first name\n * @param lastName  last name\n * @param username  username\n * @param password  password\n * @returns {Promise<number|any>}\n */\nconst doRegister = async (email, firstName, lastName, username, password) => {\n\n  const response = await axios.post(`${baseUrl}/register`, {\n    email,\n    firstName,\n    lastName,\n    username,\n    password\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * tries to verify a user with the api\n *\n * @param token token\n * @param code  code\n * @returns {Promise<boolean|*>}\n */\nconst doVerify = async (token, code) => {\n\n  const response = await axios.post(`${baseUrl}/verify`, {\n    code\n  }, {\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * resends the verification code\n *\n * @param token auth token\n * @returns {Promise<number|*>}\n */\nconst doResendVerify = async (token) => {\n\n  const response = await axios.post(`${baseUrl}/verify/resend`, null, {\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * tries to log a user in\n *\n * @param username\n * @param password\n * @returns {Promise<any>}\n */\nconst doLogin = async (username, password) => {\n\n  const response = await axios.post(`${baseUrl}/login`, {\n    username,\n    password\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/* exports */\n\nexport {\n  doRegister,\n  doVerify,\n  doResendVerify,\n  doLogin\n};","import React, {useContext} from 'react';\nimport {Container, Navbar, Nav, Button, Col, Row, NavDropdown} from 'react-bootstrap';\n\nimport AuthContext from '../context/AuthContext';\n\nimport '../styles/components/NavBar.css';\n\n\nconst NavBar = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* return */\n\n  return (\n    <Navbar bg={'light'} expand={'md'} id={'navbar'}>\n\n      <Container>\n\n        <Navbar.Brand href={'/'} id={'brand'}>TodoDoro</Navbar.Brand>\n        <Navbar.Toggle aria-controls={'basic-navbar-nav'} />\n        <Navbar.Collapse id={'basic-navbar-nav'}>\n\n          <Container>\n\n            <Row>\n\n              <Col md={'auto'}>\n                <Nav.Link href={'/'}>Home</Nav.Link>\n              </Col>\n\n              <Col md={'auto'}>\n                <Nav.Link href={'/'}>Tasks</Nav.Link>\n              </Col>\n\n              {authContext.token && authContext.username && <Col md={'auto'}>\n\n                <NavDropdown title={'Account'}>\n\n                  <NavDropdown.Item>Hello, {authContext.username}</NavDropdown.Item>\n                  {authContext.verified || <NavDropdown.Item>Verify</NavDropdown.Item>}\n                  <NavDropdown.Item>Settings</NavDropdown.Item>\n\n                </NavDropdown>\n\n              </Col>}\n\n            </Row>\n\n          </Container>\n\n          { authContext.token ? '' : <Nav.Link href={'/register'}>Register</Nav.Link> }\n\n          <Button\n            id={'button'}\n            variant={'outline-danger'}\n            href={authContext.token ? '' : '/login'}\n            onClick={authContext.token ? authContext.logout : () => {}}\n          >\n            { authContext.token ? 'Logout' : 'Login' }\n          </Button>\n\n        </Navbar.Collapse>\n\n      </Container>\n\n    </Navbar>\n  );\n\n};\n\nexport default NavBar;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Login = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [alert, setAlert] = useState('');\n\n  /* handlers */\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    if (loading) return;\n\n    setLoading(true);\n\n    try {\n      await authContext.login(username, password);\n\n    } catch (e) {\n\n      if (e.response.status === 401) {\n        setAlert('Invalid username or password');\n\n      } else {\n        setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n      }\n\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n    setLoading(false);\n  };\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                Welcome back!\n              </h3>\n\n              <Form.Group controlId={'username'} id={'in'}>\n                <Form.Control\n                  placeholder={'Enter username'}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" type=\"submit\"\n                  onClick={async (e) => await handleLogin(e)}>\n                  Login\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default Login;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Register = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState('');\n\n  const [username, setUsername] = useState(null);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [passwordConfirm, setPasswordConfirm] = useState(null);\n\n  /* handlers */\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    if (loading) return;\n    if (password !== passwordConfirm) {\n      setAlert('Passwords don\\'t match');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n    if (password.length < 8) {\n      setAlert('Password should be at least 8 characters long');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n    if (!String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      )) {\n      setAlert('Invalid email');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await authContext.register(email, firstName, lastName, username, password, passwordConfirm);\n\n    } catch (e) {\n\n      if (e.response.status === 400) {\n\n        if (e.response.data.includes('email: Error') && e.response.data.includes('username: Error')) {\n          setAlert('Both the username and email have to be unique');\n\n        } else if (e.response.data.includes('email: Error')) {\n          setAlert('This email is already taken');\n\n        } else if (e.response.data.includes('username: Error')) {\n          setAlert('This username is already taken');\n\n        } else {\n          setAlert('Invalid email');\n        }\n      } else {\n        setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n      }\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n\n    setLoading(false);\n  };\n\n  /* return */\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                Welcome to TodoDoro!\n              </h3>\n\n              <p>\n                {'We can\\'t wait to have you with us! Fill out with your information and we\\'ll be done in no time.'}\n              </p>\n\n              <Form.Group controlId={'email'} id={'in'}>\n                <Form.Control\n                  placeholder={'Email'}\n                  onChange={(e) => setEmail(e.target.value)}\n                  type={'email'}\n                  required\n                />\n                <Form.Text>Please enter a valid email. We will send you a verification code. We will never share your information.</Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId={'firstName'} id={'in'}>\n                <Form.Control\n                  placeholder={'First name'}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId={'lastName'} id={'in'}>\n                <Form.Control\n                  placeholder={'Last name'}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId={'username'} id={'in'}>\n                <Form.Control\n                  placeholder={'Username'}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"passwordConfirm\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Retype password\"\n                  onChange={(e) => setPasswordConfirm(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button\n                  id={'button'}\n                  variant=\"danger\"\n                  type=\"submit\"\n                  onClick={(e) => handleRegister(e)}\n                >\n                  Register\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default Register;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Login = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState('');\n  const [code, setCode] = useState('');\n\n  /* handlers */\n\n  const handleVerify = async (e) => {\n    e.preventDefault();\n\n    if (code.length !== 8) {\n      setAlert('Invalid code!');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await authContext.verify(code);\n\n    } catch (e) {\n\n      if (e.response.status === 403) {\n\n        if (e.response.data.includes('code expired')) {\n          setAlert('Code expired');\n\n        } else if (e.response.data.includes('invalid code')) {\n          setAlert('Invalid code');\n\n        } else {\n          setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n        }\n      }\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n    setLoading(false);\n  };\n\n  /* return */\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  if (!authContext.token) {\n    return (\n      <Navigate to={'/login'} />\n    );\n  }\n\n  return (\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                One last step!\n              </h3>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  placeholder=\"Code\"\n                  onChange={(e) => setCode(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" type=\"submit\"\n                  onClick={async (e) => await handleVerify(e)}>\n                  Verify\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport {AuthContextProvider} from './context/AuthContext';\nimport NavBar from './components/NavBar';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Verify from './pages/Verify';\n\nconst App = () => {\n  return (\n\n    <AuthContextProvider>\n\n      <NavBar/>\n\n      <Router>\n\n        <Routes>\n\n          <Route path={'/login'} element={\n            <Login/>\n          }/>\n\n          <Route path={'/register'} element={\n            <Register/>\n          }/>\n\n          <Route path={'/verify'} element={\n            <Verify/>\n          }/>\n\n          <Route path={'/tasks'} element={\n            <h2>Here are your tasks</h2>\n          }/>\n\n        </Routes>\n\n      </Router>\n\n    </AuthContextProvider>\n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}