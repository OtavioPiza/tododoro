{"version":3,"sources":["context/AuthContext.js","services/api.js","components/NavBar.js","pages/Login.js","pages/Register.js","pages/Verify.js","components/Task.js","sounds/notification.mp3","pages/Tasks.js","pages/NotFound.js","pages/Home.js","App.js","index.js"],"names":["initialState","authBaseUrl","taskBaseUrl","doRegister","email","firstName","lastName","username","password","a","axios","post","response","status","data","doVerify","token","code","headers","doLogin","getNotes","get","doCreateNote","title","description","doUpdateNote","id","put","doRemoveNote","delete","localStorage","getItem","JSON","parse","verified","e","AuthContext","createContext","register","verify","login","logout","AuthContextProvider","children","useState","auth","setAuth","useEffect","setItem","stringify","passwordConf","res","Provider","value","NavBar","authContext","useContext","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Row","Col","md","Nav","Link","NavDropdown","Item","Button","variant","onClick","Login","useStateIfMounted","loading","setLoading","setUsername","setPassword","alert","setAlert","handleLogin","preventDefault","setTimeout","to","xs","Card","Form","Group","controlId","Control","placeholder","onChange","target","required","className","type","CircularProgress","color","Alert","open","onClose","severity","sx","borderRadius","marginTop","maxWidth","Register","setFirstName","setLastName","setEmail","passwordConfirm","setPasswordConfirm","handleRegister","length","String","toLowerCase","match","includes","Text","setCode","handleVerify","Task","startHandler","deleteHandler","editHandler","progress","padding","split","map","chunk","key","Tasks","tasks","setTasks","setTitle","setDescription","task","setTask","TaskProgress","setTaskProgress","breakTask","setBreakTask","breakProgress","setBreakProgress","completed","setCompleted","cycle","setCycle","audio","setAudio","edit","setEdit","newDescription","setNewDescription","newTitle","setNewTitle","snack","setSnack","then","catch","startBreak","startCompleted","startTask","createTask","concat","console","log","updateTask","t","removeTask","filter","error","currentTaskTitle","preload","playing","onEnd","src","notification","i","tit","desc","as","style","height","Modal","Box","position","top","left","transform","width","bgcolor","border","boxShadow","p","Typography","component","mt","LinearProgress","marginBottom","minWidth","Snackbar","autoHideDuration","message","NotFound","Home","App","path","element","Verify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5726cdda.chunk.js","sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {doLogin, doRegister, doVerify} from '../services/api';\n\n// == constants == //\n\n/**\n * default initial state\n */\nlet initialState;\n\ntry {\n  initialState = localStorage.getItem('auth') ? JSON.parse(localStorage.getItem('auth')) : {\n    token: null,\n    verified: null,\n    username: null,\n  };\n} catch (e) {\n  initialState = {\n    token: null,\n    verified: null,\n    username: null,\n  };\n}\n\n// == auth context == //\n\n/**\n * auth context\n *\n * @type {React.Context<{logout: logout, verify: verify, login: login, register: register}>}\n */\nconst AuthContext = createContext({\n  register: () => {},\n  verify: () => {},\n  login: () => {},\n  logout: () => {},\n  token: () => false,\n  verified: () => false,\n  username: () => false\n});\n\n// == provider == //\n\n/**\n * context provider\n *\n * @param children\n * @returns {JSX.Element}\n * @constructor\n */\nconst AuthContextProvider = ({ children }) => {\n\n  /* state */\n\n  const [auth, setAuth] = useState(initialState);\n\n  /* hooks */\n\n  /**\n   * update local storage everytime auth changes\n   */\n  useEffect(() => {\n    localStorage.setItem('auth', JSON.stringify(auth));\n  }, [auth]);\n\n  /* handlers */\n\n  /**\n   * tries to register a user\n   *\n   * @param email\n   * @param firstName\n   * @param lastName\n   * @param username\n   * @param password\n   * @param passwordConf\n   * @returns {Promise<void>}\n   */\n  const register = async (email, firstName, lastName, username, password, passwordConf) => {\n\n    if (password !== passwordConf) {\n      return;\n    }\n\n    const res = await doRegister(email, firstName, lastName, username, password);\n\n    if (res.status === 201) {\n      setAuth({\n        ...auth,\n        token: res.data.token,\n        verified: false,\n        username: username\n      });\n    }\n  };\n\n  /**\n   * verifies an account\n   *\n   * @param code\n   * @returns {Promise<void>}\n   */\n  const verify = async (code) => {\n\n    if (!auth.token) {\n      return;\n    }\n\n    const res = await  doVerify(auth.token, code);\n\n    if (res.status === 200) {\n      setAuth({\n        ...auth,\n        verified: true,\n      });\n    }\n  };\n\n  /**\n   * tries to log a user in\n   *\n   * @param username  username\n   * @param password  password\n   */\n  const login = async (username, password) => {\n\n    if (!username || !password) {\n      throw ({ response: { status: 401 }});\n    }\n\n    const res = await doLogin(username, password);\n\n    if (res.status === 200) {\n      setAuth({\n        ...auth,\n        token: res.data.token,\n        verified: res.data.verified,\n        username\n      });\n    }\n  };\n\n  /**\n   * logs the current user out\n   */\n  const logout = () => {\n    setAuth({\n      token: null,\n      verified: null,\n      username: null,\n    });\n  };\n\n  /* return */\n\n  return (\n    <AuthContext.Provider value={{\n      register,\n      verify,\n      login,\n      logout,\n      token: auth.token,\n      verified: auth.verified,\n      username: auth.username\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n\n};\n\n// == prototyping == //\n\nAuthContextProvider.propTypes = {\n  children: PropTypes.any\n};\n\n// == export == //\n\nexport default AuthContext;\nexport {\n  AuthContextProvider\n};\n","/**\n * file to handle api calls related to user\n *\n * @version 1.0.0\n */\n\n/* imports */\n\nimport axios from 'axios';\n\n/* constants */\n\nconst authBaseUrl = '/api/auth';\nconst taskBaseUrl = '/api/task';\n\n/* functions */\n\n/**\n * tries to register a user with the api\n *\n * @param email     email\n * @param firstName first name\n * @param lastName  last name\n * @param username  username\n * @param password  password\n * @returns {Promise<number|any>}\n */\nconst doRegister = async (email, firstName, lastName, username, password) => {\n\n  const response = await axios.post(`${authBaseUrl}/register`, {\n    email,\n    firstName,\n    lastName,\n    username,\n    password\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * tries to verify a user with the api\n *\n * @param token token\n * @param code  code\n * @returns {Promise<boolean|*>}\n */\nconst doVerify = async (token, code) => {\n\n  const response = await axios.post(`${authBaseUrl}/verify`, {\n    code\n  }, {\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * resends the verification code\n *\n * @param token auth token\n * @returns {Promise<number|*>}\n */\nconst doResendVerify = async (token) => {\n\n  const response = await axios.post(`${authBaseUrl}/verify/resend`, null, {\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * tries to log a user in\n *\n * @param username\n * @param password\n * @returns {Promise<any>}\n */\nconst doLogin = async (username, password) => {\n\n  const response = await axios.post(`${authBaseUrl}/login`, {\n    username,\n    password\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * gets the notes from a user\n *\n * @param token token\n * @returns {Promise<{data: any, status: number}>}\n */\nconst getNotes = async (token) => {\n  const response = await axios.get(`${taskBaseUrl}`, {\n    headers: {\n      'Authorization': token\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\n/**\n * creates a new note\n *\n * @param token\n * @param title\n * @param description\n * @returns {Promise<{data: any, status: number}>}\n */\nconst doCreateNote = async (token, title, description) => {\n  const response = await axios.post(`${taskBaseUrl}`, {\n    title,\n    description,\n  }, {\n    headers: {\n      'Authorization': token\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\n/**\n * updates a note\n *\n * @param token\n * @param id\n * @param title\n * @param description\n * @returns {Promise<{data: any, status: AxiosResponse<any>}>}\n */\nconst doUpdateNote = async (token, id, title, description) => {\n  const response = await axios.put(`${taskBaseUrl}`, {\n    id,\n    title,\n    description\n  }, {\n    headers: {\n      'Authorization': token\n    }\n  });\n  return { status: response, data: response.data };\n};\n\n/**\n * removes a note\n *\n * @param token\n * @param id\n * @returns {Promise<{data: any, status: number}>}\n */\nconst doRemoveNote = async (token, id) => {\n  const response = await axios.delete(`${taskBaseUrl}`, {\n    headers: {\n      'Authorization': token\n    },\n    data: {\n      id\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\n/* exports */\n\nexport {\n  doRegister,\n  doVerify,\n  doResendVerify,\n  doLogin,\n  getNotes,\n  doCreateNote,\n  doUpdateNote,\n  doRemoveNote,\n};","import React, {useContext} from 'react';\nimport {Container, Navbar, Nav, Button, Col, Row, NavDropdown} from 'react-bootstrap';\n\nimport AuthContext from '../context/AuthContext';\n\nimport '../styles/components/NavBar.css';\n\n\nconst NavBar = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* return */\n\n  return (\n    <Navbar bg={'light'} expand={'md'} id={'navbar'}>\n\n      <Container>\n\n        <Navbar.Brand href={'/'} id={'brand'}>TodoDoro</Navbar.Brand>\n        <Navbar.Toggle aria-controls={'basic-navbar-nav'} />\n        <Navbar.Collapse id={'basic-navbar-nav'}>\n\n          <Container>\n\n            <Row>\n\n              <Col md={'auto'}>\n                <Nav.Link href={'/'}>Home</Nav.Link>\n              </Col>\n\n              <Col md={'auto'}>\n                <Nav.Link href={'/tasks'}>Tasks</Nav.Link>\n              </Col>\n\n              {authContext.token && authContext.username && <Col md={'auto'}>\n\n                <NavDropdown title={'Account'}>\n\n                  <NavDropdown.Item>Hello, {authContext.username}</NavDropdown.Item>\n                  {authContext.verified || <NavDropdown.Item>Verify</NavDropdown.Item>}\n                  <NavDropdown.Item>Settings</NavDropdown.Item>\n\n                </NavDropdown>\n\n              </Col>}\n\n            </Row>\n\n          </Container>\n\n          { authContext.token ? '' : <Nav.Link href={'/register'}>Register</Nav.Link> }\n\n          <Button\n            id={'button'}\n            variant={'outline-danger'}\n            href={authContext.token ? '' : '/login'}\n            onClick={authContext.token ? authContext.logout : () => {}}\n          >\n            { authContext.token ? 'Logout' : 'Login' }\n          </Button>\n\n        </Navbar.Collapse>\n\n      </Container>\n\n    </Navbar>\n  );\n\n};\n\nexport default NavBar;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\nimport {useStateIfMounted} from 'use-state-if-mounted';\n\nconst Login = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useStateIfMounted(false);\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [alert, setAlert] = useState('');\n\n  /* handlers */\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    if (loading) return;\n\n    setLoading(true);\n\n    try {\n      await authContext.login(username, password);\n\n    } catch (e) {\n\n      if (e.response.status === 401) {\n        setAlert('Invalid username or password');\n\n      } else {\n        setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n      }\n\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n    setLoading(false);\n  };\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                Welcome back!\n              </h3>\n\n              <Form.Group controlId={'username'} id={'in'}>\n                <Form.Control\n                  placeholder={'Enter username'}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" type=\"submit\"\n                  onClick={async (e) => await handleLogin(e)}>\n                  Login\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default Login;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Register = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState('');\n\n  const [username, setUsername] = useState(null);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [passwordConfirm, setPasswordConfirm] = useState(null);\n\n  /* handlers */\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    if (loading) return;\n    if (password !== passwordConfirm) {\n      setAlert('Passwords don\\'t match');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n    if (password.length < 8) {\n      setAlert('Password should be at least 8 characters long');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n    if (!String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      )) {\n      setAlert('Invalid email');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await authContext.register(email, firstName, lastName, username, password, passwordConfirm);\n\n    } catch (e) {\n\n      if (e.response.status === 400) {\n\n        if (e.response.data.includes('email: Error') && e.response.data.includes('username: Error')) {\n          setAlert('Both the username and email have to be unique');\n\n        } else if (e.response.data.includes('email: Error')) {\n          setAlert('This email is already taken');\n\n        } else if (e.response.data.includes('username: Error')) {\n          setAlert('This username is already taken');\n\n        } else {\n          setAlert('Invalid email');\n        }\n      } else {\n        setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n      }\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n\n    setLoading(false);\n  };\n\n  /* return */\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                Welcome to TodoDoro!\n              </h3>\n\n              <p>\n                {'We can\\'t wait to have you with us! Fill out with your information and we\\'ll be done in no time.'}\n              </p>\n\n              <Form.Group controlId={'email'} id={'in'}>\n                <Form.Control\n                  placeholder={'Email'}\n                  onChange={(e) => setEmail(e.target.value)}\n                  type={'email'}\n                  required\n                />\n                <Form.Text>Please enter a valid email. We will send you a verification code. We will never share your information.</Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId={'firstName'} id={'in'}>\n                <Form.Control\n                  placeholder={'First name'}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId={'lastName'} id={'in'}>\n                <Form.Control\n                  placeholder={'Last name'}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId={'username'} id={'in'}>\n                <Form.Control\n                  placeholder={'Username'}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"passwordConfirm\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Retype password\"\n                  onChange={(e) => setPasswordConfirm(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button\n                  id={'button'}\n                  variant=\"danger\"\n                  type=\"submit\"\n                  onClick={(e) => handleRegister(e)}\n                >\n                  Register\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default Register;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Login = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState('');\n  const [code, setCode] = useState('');\n\n  /* handlers */\n\n  const handleVerify = async (e) => {\n    e.preventDefault();\n\n    if (code.length !== 8) {\n      setAlert('Invalid code!');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await authContext.verify(code);\n\n    } catch (e) {\n\n      if (e.response.status === 403) {\n\n        if (e.response.data.includes('code expired')) {\n          setAlert('Code expired');\n\n        } else if (e.response.data.includes('invalid code')) {\n          setAlert('Invalid code');\n\n        } else {\n          setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n        }\n      }\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n    setLoading(false);\n  };\n\n  /* return */\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  if (!authContext.token) {\n    return (\n      <Navigate to={'/login'} />\n    );\n  }\n\n  return (\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                One last step!\n              </h3>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  placeholder=\"Code\"\n                  onChange={(e) => setCode(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" type=\"submit\"\n                  onClick={async (e) => await handleVerify(e)}>\n                  Verify\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport {Button, Card, Container} from 'react-bootstrap';\nimport {CircularProgress} from '@mui/material';\nimport PropTypes from 'prop-types';\n\nimport '../styles/components/Task.css';\n\nconst Task = ({ startHandler, deleteHandler, editHandler, id, title, description, progress }) => {\n\n  /* context */\n\n  return (\n    <Card id={'task'} >\n\n      <Container id={'container'}>\n\n        <div id={'header'}>\n\n          <Button id={'titleButton'} variant=\"danger\" onClick={() => startHandler(id)}>\n\n            <div id={'titleContainer'}>\n\n              <CircularProgress color={'inherit'} variant=\"determinate\" value={progress} id={'bar'} sx={{\n                padding: '.2rem'\n              }}/>\n\n              <h5>\n                {title}\n              </h5>\n\n            </div>\n\n          </Button>\n\n          <button id={'delButton'} onClick={() => deleteHandler(id)}>\n            Remove\n          </button>\n\n          <button id={'delButton'} onClick={() => editHandler(id, title, description)}>\n            Edit\n          </button>\n\n        </div>\n\n        { description && <p>\n          {\n            description.split('\\n').map((chunk, key) => (<span key={key}>{chunk}<br /></span>))\n          }\n        </p>}\n\n      </Container>\n\n    </Card>\n  );\n};\n\nTask.propTypes = {\n  startHandler: PropTypes.func.isRequired,\n  deleteHandler: PropTypes.func.isRequired,\n  editHandler: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  progress: PropTypes.number\n};\n\nexport default Task;","export default __webpack_public_path__ + \"static/media/notification.d9cddb63.mp3\";","import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Tasks.css';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\nimport {doCreateNote, doRemoveNote, doUpdateNote, getNotes} from '../services/api';\nimport {Alert, Box, CircularProgress, LinearProgress, Modal, Snackbar, Typography} from '@mui/material';\nimport Task from '../components/Task';\nimport ReactHowler from 'react-howler';\nimport notification from '../sounds/notification.mp3';\n\nconst Tasks = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  authContext.token = authContext.token ? authContext.token : null;\n  authContext.verified = authContext.verified ? authContext.verified : null;\n  authContext.username = authContext.username ? authContext.username : null;\n\n  /* state */\n\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [task, setTask] = useState(null);\n  const [TaskProgress, setTaskProgress] = useState(0);\n  const [breakTask, setBreakTask] = useState(null);\n  const [breakProgress, setBreakProgress] = useState(0);\n  const [completed, setCompleted] = useState(null);\n  const [cycle, setCycle] =  useState(1);\n\n  const [audio, setAudio] = useState(false);\n  const [alert, setAlert] = useState('');\n\n  const [edit, setEdit] = useState(null);\n  const [newDescription, setNewDescription] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n\n  const [snack, setSnack] = useState('');\n\n  /* hooks */\n\n  useEffect(() => {\n\n    getNotes(authContext.token)\n      .then(res => {\n        setTasks(res.data);\n      })\n      .catch((e) => {\n\n        if (e.response.status === 401 && authContext.token) {\n          setAlert('You session has expired');\n          authContext.logout();\n          return;\n        }\n        setAlert('Something went wrong while fetching your tasks');\n      });\n  }, []);\n\n  if (task && !completed) {\n    setTimeout(() => {\n\n      if (TaskProgress !== 100) {\n        setTaskProgress(TaskProgress + 1);\n\n      } else {\n        startBreak(task);\n      }\n    }, 15000);\n  }\n\n  if (breakTask) {\n    setTimeout(() => {\n\n      if (breakProgress !== 100) {\n        setBreakProgress(breakProgress + 1);\n      } else {\n        startCompleted(breakTask);\n      }\n    }, cycle % 4 ? 3000 : 9000);\n  }\n\n  /* handlers */\n\n  const startTask = (id) => {\n\n    if (task) {\n\n      if (task === id) {\n        startBreak(task);\n\n      } else {\n        setCompleted(task);\n        setTask(id);\n      }\n      return;\n    }\n\n    setTaskProgress(0);\n    setTask(id);\n  };\n\n  const startBreak = () => {\n    setTaskProgress(100);\n    setAudio(true);\n    setTask(null);\n\n    if (breakTask) {\n      startCompleted(breakTask);\n    }\n\n    setBreakProgress(0);\n    setBreakTask(task);\n  };\n\n  const startCompleted = (id) => {\n    setAudio(true);\n    setCycle(cycle % 4 ? cycle + 1 : 1);\n    setBreakProgress(100);\n    setBreakTask(null);\n    setCompleted(id);\n  };\n\n  const createTask = async () => {\n\n    if (!title) {\n      setAlert('Please enter a title');\n      setTimeout(() => setAlert(''), 5000);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const res = await doCreateNote(authContext.token, title, description ? description : null);\n      setTasks(tasks.concat({\n        id: res.data.id,\n        title: res.data.title,\n        description: res.data.description,\n      }));\n      setTitle('');\n      setDescription('');\n      setSnack('Task created');\n\n    } catch (e) {\n      console.log(e);\n      setAlert('Something went wrong while creating a new task');\n      setTimeout(() => setAlert(''), 5000);\n    }\n    setLoading(false);\n    setEdit(null);\n  };\n\n  const updateTask = async () => {\n\n    if (!newTitle) {\n      setAlert('Please enter a valid title');\n      setEdit(null);\n      setTimeout(() => setAlert(''), 5000);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await doUpdateNote(authContext.token, edit, newTitle, newDescription);\n      setTasks(tasks.map(t => {\n        if (t.id !== edit) return t;\n        return {\n          ...t,\n          title: newTitle,\n          description: newDescription\n        };\n      }));\n      setSnack('Task updated');\n\n    } catch (e) {\n      console.log(e);\n      setAlert('Something went wrong while updating your task');\n      setTimeout(() => setAlert(''), 5000);\n    }\n    setEdit(false);\n    setLoading(false);\n  };\n\n  const removeTask = async (id) => {\n\n    try {\n      await doRemoveNote(authContext.token, id);\n      setTasks(tasks.filter((task) => task.id !== id));\n      setSnack('Task removed');\n\n    } catch (e) {\n      console.log(e.error);\n      setAlert('Something went wrong while deleting the task');\n      setTimeout(() => setAlert(''), 5000);\n    }\n\n  };\n\n  const currentTaskTitle = (id) => {\n\n    for (const task of tasks) {\n      if (task.id === id) {\n        return ` (${task.title})`;\n      }\n    }\n  };\n\n  /* redirect if not authenticated */\n\n  if (!authContext.token) {\n    return (\n      <Navigate to={'/login'} />\n    );\n  }\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n  console.log(edit);\n\n  /* return tasks */\n\n  return (\n    <div>\n\n      <ReactHowler preload={true} playing={audio} onEnd={() => setAudio(false)} src={notification} />\n\n      <Row>\n\n        <Col/>\n\n        <Col xs={'auto'}>\n\n          {\n            tasks.map((t, i) => (\n              <Task\n                key={i}\n                startHandler={startTask}\n                deleteHandler={removeTask}\n                editHandler={(id, tit, desc) => {\n                  setEdit(id);\n                  setNewTitle(tit);\n                  setNewDescription(desc);\n                }}\n                id={t.id}\n                title={t.title}\n                description={t.description}\n                progress={task && t.id === task ? TaskProgress : 100}\n              />\n            ))\n          }\n\n          <Card id={'create'} >\n\n            <Container id={'container'}>\n\n              <Form>\n\n                <h4>\n                  Create a new task!\n                </h4>\n\n                <Form.Group controlId={'title'} id={'in'}>\n                  <Form.Control\n                    placeholder={'Enter a title'}\n                    onChange={(e) => setTitle(e.target.value)}\n                    value={title}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"description\" id={'in'}>\n                  <Form.Control\n                    placeholder={'Enter a description (optional)'}\n                    onChange={(e) => setDescription(e.target.value)}\n                    as='textarea'\n                    style={{ height: '10rem' }}\n                    value={description}\n                  />\n                </Form.Group>\n\n                <div id={'buttonHolder'}>\n\n                  <Button id={'button'} variant=\"danger\" onClick={createTask}>\n                    Create\n                  </Button>\n\n                  {loading && <CircularProgress color={'inherit'}/>}\n\n                </div>\n\n              </Form>\n\n            </Container>\n\n          </Card>\n\n          <div id={'alertDiv'}>\n\n            {alert && <Alert\n              id={'alert'}\n              open={alert && true}\n              onClose={() => setAlert('')}\n              severity={'error'}\n              sx={{\n                borderRadius: '1rem',\n                marginTop: '5px',\n                maxWidth: '100%'\n              }}\n            >{alert}</Alert>}\n\n          </div>\n\n        </Col>\n\n        <Col/>\n\n      </Row>\n\n      <Modal\n        open={!!breakTask}\n        onClose={() => () => startCompleted(breakTask)}\n      >\n        <Box sx={{\n          borderRadius: '1rem',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          border: 'none',\n          boxShadow: 24,\n          p: 4,\n        }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Time to take a break!\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {'You have been working hard; take some to chill and recharge. We will notify you when it\\'s time to get back to work.'}\n          </Typography>\n\n          <br/>\n\n          <div id={'breakBar'}>\n            <LinearProgress variant={'determinate'} color={'inherit'} value={breakProgress} />\n          </div>\n\n          <br/>\n\n          <div>\n\n            <Button variant={'danger'} id={'button'} onClick={() => startCompleted(breakTask)}>Skip Break</Button>\n\n          </div>\n\n        </Box>\n      </Modal>\n\n      <Modal\n        open={!!completed}\n        onClose={() => () => setCompleted(null)}\n      >\n        <Box sx={{\n          borderRadius: '1rem',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          border: 'none',\n          boxShadow: 24,\n          p: 4,\n        }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Did you complete the task?\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {`Did you complete the task you have been working on${currentTaskTitle(completed)}?`}\n          </Typography>\n\n          <br/>\n\n          <Button\n            style={{\n              marginBottom: '.5rem'\n            }}\n            variant={'danger'}\n            id={'button'}\n            onClick={() => {\n              removeTask(completed).then(() => {\n                setCompleted(null);\n              });\n            }}\n          >\n            Yes! Go ahead and remove it.\n          </Button>\n\n          <Button\n            variant={'danger'}\n            id={'button'}\n            onClick={() => {\n              setCompleted(null);\n            }}\n          >\n            No! Keep it there.</Button>\n\n        </Box>\n      </Modal>\n\n      <Modal\n        open={!!edit}\n        onClose={() => () => setEdit(null)}\n      >\n        <Box sx={{\n          borderRadius: '1rem',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          minWidth: 400,\n          bgcolor: 'background.paper',\n          border: 'none',\n          boxShadow: 24,\n          p: 4,\n        }}>\n\n          <div id={'edit'}>\n\n            <h4>\n               Edit your task: {currentTaskTitle(edit)}\n            </h4>\n\n            <Form.Group controlId={'title'} id={'in'}>\n              <Form.Control\n                placeholder={'Enter new a title'}\n                onChange={(e) => setNewTitle(e.target.value)}\n                value={newTitle}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"description\" id={'in'}>\n              <Form.Control\n                placeholder={'Enter a new description (optional)'}\n                onChange={(e) => setNewDescription(e.target.value)}\n                as='textarea'\n                style={{ height: '10rem' }}\n                value={newDescription}\n              />\n            </Form.Group>\n\n            <div id={'buttonHolder'}>\n\n              <Button\n                style={{\n                  marginBottom: '.5rem'\n                }}\n                id={'button'}\n                variant={'danger'}\n                onClick={updateTask}>\n                  Update\n              </Button>\n\n              <Button\n                style={{\n                  marginBottom: '.5rem'\n                }}\n                id={'button'}\n                variant={'danger'}\n                onClick={() => setEdit(false)}>\n              Cancel\n              </Button>\n\n              {loading && <CircularProgress color={'inherit'}/>}\n\n            </div>\n\n          </div>\n\n\n        </Box>\n\n      </Modal>\n\n      <Snackbar\n        open={!!snack}\n        autoHideDuration={5000}\n        onClose={() => setSnack('')}\n        message={snack}\n      />\n\n    </div>\n  );\n};\n\nexport default Tasks;","import React from 'react';\nimport {Card, Col, Row} from 'react-bootstrap';\nimport '../styles/pages/NotFound.css';\n\nconst NotFound = () => {\n\n  return (\n\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'notFound'} >\n\n          <h3>\n            {'Oops! We didn\\'t find what you were looking for...'}\n          </h3>\n\n        </Card>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default NotFound;","import React from 'react';\nimport {Card, Col, Row} from 'react-bootstrap';\nimport '../styles/pages/Home.css';\n\nconst Home = () => (\n  <Row>\n    <Col/>\n    <Col xs={'auto'}>\n\n      <Card id={'home'} >\n\n        <h3>\n          {'Welcome to TodoDoro!'}\n        </h3>\n\n        <p>\n\n          <h6>\n            {'What is TodoDoro?'}\n          </h6>\n\n          TodoDoro is a productivity todo list that implements the pomodoro method to be more productive.\n\n          <br />\n          <br />\n\n          <h6>\n            How to use the app?\n          </h6>\n\n          First of all you need to register and verify your account which can be done <a href={'/register'}>here</a> or\n          sign in to your existing account which can be done <a href={'/login'}>here</a>. Then, you will be able to\n          access your tasks page. There, you will be able to create tasks and choose to focus on them. When you do so,\n          a 25 minutes timer will start. Make sure you work hard on the task during that time! After that,\n          an automatic 5-minute break will begin, and the cycle repeats until you get a longer 15-minute break.\n\n          <br />\n          <br />\n\n          At any point, you can click the button with the task you are currently working on to finish the timer\n          and go to the break. You can also change the task you are working on by clicking the button with\n          another {'task\\'s'} title. Then, the remaining time will automatically transfer to that task.\n\n          <br />\n          <br />\n\n          <h6>\n            Making the most out of this app\n          </h6>\n\n          This app works better as a daily to-do list rather than a longer-term one, although I might add future\n          features that support that style too. In that sense, I made the most out of this app by populating the tasks\n          I needed to complete for the day at the beginning of each day. The real magic comes from creating tasks that\n          you can finish in more or less 25 minutes, and there is no one way to do that other than trial and error.\n          However, once you find that sweet spot, you will see your productivity rise significantly.\n\n          <br />\n          <br />\n\n          <h6>\n            {'Author\\'s'} note\n          </h6>\n\n          I hope you enjoy your time here with us. If you have any suggestions for future features, you can reach out to\n          us at <a href={'mailto:tododorotimer@gmail.com'}>tododorotimer@gmail.com</a>.\n\n        </p>\n\n      </Card>\n\n    </Col>\n    <Col/>\n  </Row>\n);\n\nexport default Home;","import React from 'react';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport {AuthContextProvider} from './context/AuthContext';\nimport NavBar from './components/NavBar';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Verify from './pages/Verify';\nimport Tasks from './pages/Tasks';\nimport NotFound from './pages/NotFound';\nimport Home from './pages/Home';\n\nconst App = () => {\n  return (\n\n    <AuthContextProvider>\n\n      <NavBar/>\n\n      <Router>\n\n        <Routes>\n\n          <Route path={'/login'} element={\n            <Login/>\n          }/>\n\n          <Route path={'/register'} element={\n            <Register/>\n          }/>\n\n          <Route path={'/verify'} element={\n            <Verify/>\n          }/>\n\n          <Route path={'/tasks'} element={\n            <Tasks/>\n          }/>\n\n          <Route path={'/'} element={\n            <Home/>\n          }/>\n\n          <Route path={'/*'} element={\n            <NotFound/>\n          }/>\n\n        </Routes>\n\n      </Router>\n\n    </AuthContextProvider>\n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}