{"version":3,"sources":["context/AuthContext.js","services/api.js","components/NavBar.js","context/LogContext.js","pages/Login.js","pages/Register.js","pages/Verify.js","components/Task.js","sounds/notification.mp3","pages/Tasks.js","components/Protect.js","App.js","index.js"],"names":["initialState","authBaseUrl","taskBaseUrl","doRegister","email","firstName","lastName","username","password","a","axios","post","response","status","data","doCheck","token","headers","Authorization","doVerify","code","doLogin","getNotes","get","doCreateNote","title","description","doRemoveNote","id","delete","localStorage","getItem","JSON","parse","verified","e","AuthContext","createContext","register","verify","login","logout","check","AuthContextProvider","children","useState","auth","setAuth","useEffect","setItem","stringify","passwordConf","res","Provider","value","then","catch","NavBar","authContext","useContext","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Row","Col","md","Nav","Link","NavDropdown","Item","Button","variant","onClick","error","info","warn","LogContext","setError","setInfo","setWarn","LogContextProvider","log","setLog","duration","setTimeout","Login","logContext","useStateIfMounted","loading","setLoading","setUsername","setPassword","handleLogin","preventDefault","to","xs","Card","Form","Group","controlId","Control","placeholder","onChange","target","required","className","type","CircularProgress","color","Alert","open","onClose","severity","sx","borderRadius","marginTop","maxWidth","Register","alert","setAlert","setFirstName","setLastName","setEmail","passwordConfirm","setPasswordConfirm","handleRegister","length","String","toLowerCase","match","includes","Text","setCode","handleVerify","Task","startHandler","deleteHandler","progress","padding","Tasks","tasks","setTasks","setTitle","setDescription","loadingTaks","setLoadingTaks","task","setTask","TaskProgress","setTaskProgress","breakTask","setBreakTask","breakProgress","setBreakProgress","completed","setCompleted","cycle","setCycle","audio","setAudio","snack","setSnack","console","startBreak","startCompleted","startTask","createTask","concat","removeTask","filter","LinearProgress","map","t","i","Modal","Box","position","top","left","transform","width","bgcolor","border","boxShadow","p","Typography","component","mt","currentTaskTitle","style","marginBottom","Snackbar","autoHideDuration","message","preload","playing","onEnd","src","notification","Protect","App","path","element","Verify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37348cbe.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { doLogin, doRegister, doVerify, doCheck } from '../services/api';\n\n// == constants == //\n\n/**\n * default initial state\n */\nlet initialState;\n\ntry {\n  initialState = localStorage.getItem('auth') ? JSON.parse(localStorage.getItem('auth')) : {\n    token: null,\n    verified: null,\n    username: null,\n  };\n} catch (e) {\n  initialState = {\n    token: null,\n    verified: null,\n    username: null,\n  };\n}\n\n// == auth context == //\n\n/**\n * auth context\n *\n * @type {React.Context<{logout: logout, verify: verify, login: login, register: register}>}\n */\nconst AuthContext = createContext({\n  register: () => { },\n  verify: () => { },\n  login: () => { },\n  logout: () => { },\n  check: () => { },\n  token: () => false,\n  verified: () => false,\n  username: () => false\n});\n\n// == provider == //\n\n/**\n * context provider\n *\n * @param children\n * @returns {JSX.Element}\n * @constructor\n */\nconst AuthContextProvider = ({ children }) => {\n\n  /* state */\n\n  const [auth, setAuth] = useState(initialState);\n\n  /* hooks */\n\n  /**\n   * update local storage everytime auth changes\n   */\n  useEffect(() => {\n    localStorage.setItem('auth', JSON.stringify(auth));\n  }, [auth]);\n\n  /* handlers */\n\n  /**\n   * tries to register a user\n   *\n   * @param email\n   * @param firstName\n   * @param lastName\n   * @param username\n   * @param password\n   * @param passwordConf\n   * @returns {Promise<void>}\n   */\n  const register = async (email, firstName, lastName, username, password, passwordConf) => {\n\n    if (password !== passwordConf) {\n      return;\n    }\n\n    const res = await doRegister(email, firstName, lastName, username, password);\n\n    if (res.status === 201) {\n      setAuth({\n        ...auth,\n        token: res.data.token,\n        verified: false,\n        username: username\n      });\n    }\n  };\n\n  /**\n   * verifies an account\n   *\n   * @param code\n   * @returns {Promise<void>}\n   */\n  const verify = async (code) => {\n\n    if (!auth.token) {\n      return;\n    }\n\n    const res = await doVerify(auth.token, code);\n\n    if (res.status === 200) {\n      setAuth({\n        ...auth,\n        verified: true,\n      });\n    }\n  };\n\n  /**\n   * tries to log a user in\n   *\n   * @param username  username\n   * @param password  password\n   */\n  const login = async (username, password) => {\n\n    if (!username || !password) {\n      throw ({ response: { status: 401 } });\n    }\n\n    const res = await doLogin(username, password);\n\n    if (res.status === 200) {\n      setAuth({\n        ...auth,\n        token: res.data.token,\n        verified: res.data.verified,\n        username\n      });\n    }\n  };\n\n  /**\n   * logs the current user out\n   */\n  const logout = () => {\n    setAuth({\n      token: null,\n      verified: null,\n      username: null,\n    });\n  };\n\n  /**\n   * checks validity of the current token\n   */\n  const check = () => {\n    if (!auth.token) {\n      return;\n    }\n\n    doCheck(auth.token)\n      .then(() => { })\n      .catch(() => {\n        setAuth({\n          token: null,\n          verified: null,\n          username: null,\n        });\n      });\n  };\n\n  /* return */\n\n  return (\n    <AuthContext.Provider value={{\n      register,\n      verify,\n      login,\n      logout,\n      check,\n      token: auth.token,\n      verified: auth.verified,\n      username: auth.username\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n\n};\n\n// == prototyping == //\n\nAuthContextProvider.propTypes = {\n  children: PropTypes.any\n};\n\n// == export == //\n\nexport default AuthContext;\nexport {\n  AuthContextProvider\n};\n","/**\n * file to handle api calls related to user\n *\n * @version 1.0.0\n */\n\n/* imports */\n\nimport axios from 'axios';\n\n/* constants */\n\nconst authBaseUrl = '/api/auth';\nconst taskBaseUrl = '/api/task';\n\n/* functions */\n\n/**\n * tries to register a user with the api\n *\n * @param email     email\n * @param firstName first name\n * @param lastName  last name\n * @param username  username\n * @param password  password\n * @returns {Promise<number|any>}\n */\nconst doRegister = async (email, firstName, lastName, username, password) => {\n\n  const response = await axios.post(`${authBaseUrl}/register`, {\n    email,\n    firstName,\n    lastName,\n    username,\n    password\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * Checks if the token the user is holding is valid\n * \n * @param {String} token token provided by the api\n * @returns \n */\nconst doCheck = async (token) => {\n  const response = await axios.post(`${authBaseUrl}/check`, null, {\n    headers: {\n      Authorization: token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * tries to verify a user with the api\n *\n * @param token token\n * @param code  code\n * @returns {Promise<boolean|*>}\n */\nconst doVerify = async (token, code) => {\n\n  const response = await axios.post(`${authBaseUrl}/verify`, {\n    code\n  }, {\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * resends the verification code\n *\n * @param token auth token\n * @returns {Promise<number|*>}\n */\nconst doResendVerify = async (token) => {\n\n  const response = await axios.post(`${authBaseUrl}/verify/resend`, null, {\n    headers: {\n      'Authorization': token\n    }\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * tries to log a user in\n *\n * @param username\n * @param password\n * @returns {Promise<any>}\n */\nconst doLogin = async (username, password) => {\n\n  const response = await axios.post(`${authBaseUrl}/login`, {\n    username,\n    password\n  });\n\n  return { status: response.status, data: response.data };\n};\n\n/**\n * gets the notes from a user\n *\n * @param token token\n * @returns {Promise<{data: any, status: number}>}\n */\nconst getNotes = async (token) => {\n  const response = await axios.get(`${taskBaseUrl}`, {\n    headers: {\n      'Authorization': token\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\n/**\n * creates a new note\n *\n * @param token\n * @param title\n * @param description\n * @returns {Promise<{data: any, status: number}>}\n */\nconst doCreateNote = async (token, title, description) => {\n  const response = await axios.post(`${taskBaseUrl}`, {\n    title,\n    description,\n  }, {\n    headers: {\n      'Authorization': token\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\nconst doRemoveNote = async (token, id) => {\n  const response = await axios.delete(`${taskBaseUrl}`, {\n    headers: {\n      'Authorization': token\n    },\n    data: {\n      id\n    }\n  });\n  return { status: response.status, data: response.data };\n};\n\n/* exports */\n\nexport {\n  doRegister,\n  doVerify,\n  doCheck,\n  doResendVerify,\n  doLogin,\n  getNotes,\n  doCreateNote,\n  doRemoveNote,\n};","import React, {useContext} from 'react';\nimport {Container, Navbar, Nav, Button, Col, Row, NavDropdown} from 'react-bootstrap';\n\nimport AuthContext from '../context/AuthContext';\n\nimport '../styles/components/NavBar.css';\n\n\nconst NavBar = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  /* return */\n\n  return (\n    <Navbar bg={'light'} expand={'md'} id={'navbar'}>\n\n      <Container>\n\n        <Navbar.Brand href={'/'} id={'brand'}>TodoDoro</Navbar.Brand>\n        <Navbar.Toggle aria-controls={'basic-navbar-nav'} />\n        <Navbar.Collapse id={'basic-navbar-nav'}>\n\n          <Container>\n\n            <Row>\n\n              <Col md={'auto'}>\n                <Nav.Link href={'/'}>Home</Nav.Link>\n              </Col>\n\n              <Col md={'auto'}>\n                <Nav.Link href={'/tasks'}>Tasks</Nav.Link>\n              </Col>\n\n              {authContext.token && authContext.username && <Col md={'auto'}>\n\n                <NavDropdown title={'Account'}>\n\n                  <NavDropdown.Item>Hello, {authContext.username}</NavDropdown.Item>\n                  {authContext.verified || <NavDropdown.Item>Verify</NavDropdown.Item>}\n                  <NavDropdown.Item>Settings</NavDropdown.Item>\n\n                </NavDropdown>\n\n              </Col>}\n\n            </Row>\n\n          </Container>\n\n          { authContext.token ? '' : <Nav.Link href={'/register'}>Register</Nav.Link> }\n\n          <Button\n            id={'button'}\n            variant={'outline-danger'}\n            href={authContext.token ? '' : '/login'}\n            onClick={authContext.token ? authContext.logout : () => {}}\n          >\n            { authContext.token ? 'Logout' : 'Login' }\n          </Button>\n\n        </Navbar.Collapse>\n\n      </Container>\n\n    </Navbar>\n  );\n\n};\n\nexport default NavBar;","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * default initial state\n */\nconst initialState = {\n  error: '',\n  info: '',\n  warn: '',\n};\n\nconst LogContext = createContext({\n  error: '',\n  info: '',\n  warn: '',\n  setError: () => { },\n  setInfo: () => { },\n  setWarn: () => { },\n});\n\nconst LogContextProvider = ({ children }) => {\n\n  /* state */\n\n  const [log, setLog] = useState(initialState);\n\n  /* handlers */\n\n  const setError = (error, duration = 5000) => {\n    setLog({ ...log, error: error });\n    setTimeout(() => {\n      setLog({ ...log, error: '' });\n    }, duration);\n  };\n\n  const setInfo = (info, duration = 5000) => {\n    setLog({ ...log, info: info });\n    setTimeout(() => {\n      setLog({ ...log, info: '' });\n    }, duration);\n  };\n\n  const setWarn = (warn, duration = 5000) => {\n    setLog({ ...log, warn: warn });\n    setTimeout(() => {\n      setLog({ ...log, warn: '' });\n    }, duration);\n  };\n\n  return (\n    <LogContext.Provider value={{\n      error: log.error,\n      info: log.info,\n      warn: log.warn,\n      setError,\n      setInfo,\n      setWarn,\n    }}>\n      {children}\n    </LogContext.Provider>\n  );\n\n};\n\n// == prototyping == //\n\nLogContextProvider.propTypes = {\n  children: PropTypes.any\n};\n\n// == export == //\n\nexport default LogContext;\nexport {\n  LogContextProvider\n};\n","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\nimport {useStateIfMounted} from 'use-state-if-mounted';\nimport LogContext from '../context/LogContext';\n\nconst Login = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n  const logContext = useContext(LogContext);\n\n  /* states */\n\n  const [loading, setLoading] = useStateIfMounted(false);\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n\n  /* handlers */\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    if (loading) return;\n\n    setLoading(true);\n\n    try {\n      await authContext.login(username, password);\n\n    } catch (e) {\n\n      if (e.response.status === 401) {\n        logContext.setError('Invalid username or password');\n\n      } else {\n        logContext.setError('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n      }\n    }\n    setLoading(false);\n  };\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                Welcome back!\n              </h3>\n\n              <Form.Group controlId={'username'} id={'in'}>\n                <Form.Control\n                  placeholder={'Enter username'}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" type=\"submit\"\n                  onClick={async (e) => await handleLogin(e)}>\n                  Login\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {logContext.error && <Alert\n            id={'alert'}\n            open={logContext.error && true}\n            onClose={() => logContext.setError('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '15px',\n              maxWidth: '100%'\n            }}\n          >{logContext.error}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default Login;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Register = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState('');\n\n  const [username, setUsername] = useState(null);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [passwordConfirm, setPasswordConfirm] = useState(null);\n\n  /* handlers */\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n\n    if (loading) return;\n    if (password !== passwordConfirm) {\n      setAlert('Passwords don\\'t match');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n    if (password.length < 8) {\n      setAlert('Password should be at least 8 characters long');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n    if (!String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      )) {\n      setAlert('Invalid email');\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await authContext.register(email, firstName, lastName, username, password, passwordConfirm);\n\n    } catch (e) {\n\n      if (e.response.status === 400) {\n\n        if (e.response.data.includes('email: Error') && e.response.data.includes('username: Error')) {\n          setAlert('Both the username and email have to be unique');\n\n        } else if (e.response.data.includes('email: Error')) {\n          setAlert('This email is already taken');\n\n        } else if (e.response.data.includes('username: Error')) {\n          setAlert('This username is already taken');\n\n        } else {\n          setAlert('Invalid email');\n        }\n      } else {\n        setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n      }\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n\n    setLoading(false);\n  };\n\n  /* return */\n\n  if (authContext.token && !authContext.verified) {\n    return (\n      <Navigate to={'/verify'} />\n    );\n  }\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                Welcome to TodoDoro!\n              </h3>\n\n              <p>\n                {'We can\\'t wait to have you with us! Fill out with your information and we\\'ll be done in no time.'}\n              </p>\n\n              <Form.Group controlId={'email'} id={'in'}>\n                <Form.Control\n                  placeholder={'Email'}\n                  onChange={(e) => setEmail(e.target.value)}\n                  type={'email'}\n                  required\n                />\n                <Form.Text>Please enter a valid email. We will send you a verification code. We will never share your information.</Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId={'firstName'} id={'in'}>\n                <Form.Control\n                  placeholder={'First name'}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId={'lastName'} id={'in'}>\n                <Form.Control\n                  placeholder={'Last name'}\n                  onChange={(e) => setLastName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId={'username'} id={'in'}>\n                <Form.Control\n                  placeholder={'Username'}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"passwordConfirm\" id={'in'}>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Retype password\"\n                  onChange={(e) => setPasswordConfirm(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button\n                  id={'button'}\n                  variant=\"danger\"\n                  type=\"submit\"\n                  onClick={(e) => handleRegister(e)}\n                >\n                  Register\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n\n  );\n};\n\nexport default Register;","import React, {useContext, useState} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport '../styles/pages/Forms.css';\nimport {Alert, CircularProgress} from '@mui/material';\nimport AuthContext from '../context/AuthContext';\nimport {Navigate} from 'react-router';\n\nconst Login = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  /* states */\n\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState('');\n  const [code, setCode] = useState('');\n\n  /* handlers */\n\n  const handleVerify = async (e) => {\n    e.preventDefault();\n\n    if (code.length !== 8) {\n      setAlert('Invalid code!');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await authContext.verify(code);\n\n    } catch (e) {\n\n      if (e.response.status === 403) {\n\n        if (e.response.data.includes('code expired')) {\n          setAlert('Code expired');\n\n        } else if (e.response.data.includes('invalid code')) {\n          setAlert('Invalid code');\n\n        } else {\n          setAlert('Something went wrong when connecting to our servers. We have been notified and are currently working on it. Hang thight!');\n        }\n      }\n      setTimeout(() => {\n        setAlert('');\n      }, 5000);\n    }\n    setLoading(false);\n  };\n\n  /* return */\n\n  if (authContext.token && authContext.verified) {\n    return (\n      <Navigate to={'/tasks'} />\n    );\n  }\n\n  return (\n    <Row>\n      <Col/>\n      <Col xs={'auto'}>\n\n        <Card id={'card'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h3>\n                One last step!\n              </h3>\n\n              <p>\n                Enter the code sent to your email to verify your account and get started.\n              </p>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\" id={'in'}>\n                <Form.Control\n                  placeholder=\"Code\"\n                  onChange={(e) => setCode(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" type=\"submit\"\n                  onClick={async (e) => await handleVerify(e)}>\n                  Verify\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'}/>}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col/>\n    </Row>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport {Button, Card, Container} from 'react-bootstrap';\nimport {CircularProgress} from '@mui/material';\nimport PropTypes from 'prop-types';\n\nimport '../styles/components/Task.css';\n\nconst Task = ({ startHandler, deleteHandler, id, title, description, progress }) => {\n\n  /* context */\n\n  return (\n    <Card id={'task'} >\n\n      <Container id={'container'}>\n\n        <div id={'header'}>\n\n          <Button id={'titleButton'} variant=\"danger\" onClick={() => startHandler(id)}>\n\n            <div id={'titleContainer'}>\n\n              <CircularProgress color={'inherit'} variant=\"determinate\" value={progress} id={'bar'} sx={{\n                padding: '.2rem'\n              }}/>\n\n              <h5>\n                {title}\n              </h5>\n\n            </div>\n\n          </Button>\n\n          <button id={'delButton'} onClick={() => deleteHandler(id)}>\n            X\n          </button>\n\n        </div>\n\n        { description && <p>\n          {description}\n        </p>}\n\n      </Container>\n\n    </Card>\n  );\n};\n\nTask.propTypes = {\n  startHandler: PropTypes.func.isRequired,\n  deleteHandler: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  progress: PropTypes.number\n};\n\nexport default Task;","export default __webpack_public_path__ + \"static/media/notification.d9cddb63.mp3\";","import React, { useContext, useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Form, Row } from 'react-bootstrap';\nimport '../styles/pages/Tasks.css';\nimport AuthContext from '../context/AuthContext';\nimport { doCreateNote, doRemoveNote, getNotes } from '../services/api';\nimport { Alert, Box, CircularProgress, LinearProgress, Modal, Snackbar, Typography } from '@mui/material';\nimport Task from '../components/Task';\nimport ReactHowler from 'react-howler';\nimport notification from '../sounds/notification.mp3';\n\nconst Tasks = () => {\n\n  /* context */\n\n  const authContext = useContext(AuthContext);\n\n  /* state */\n\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadingTaks, setLoadingTaks] = useState(false);\n\n  const [task, setTask] = useState(null);\n  const [TaskProgress, setTaskProgress] = useState(0);\n  const [breakTask, setBreakTask] = useState(null);\n  const [breakProgress, setBreakProgress] = useState(0);\n  const [completed, setCompleted] = useState(null);\n  const [cycle, setCycle] = useState(1);\n\n  const [audio, setAudio] = useState(false);\n  const [alert, setAlert] = useState('');\n  const [snack, setSnack] = useState('');\n\n  /* hooks */\n\n  useEffect(() => {\n    setLoadingTaks(true);\n\n    getNotes(authContext.token)\n      .then(res => {\n        setTasks(res.data);\n        setLoadingTaks(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        setAlert('Something went wrong while fetching your tasks');\n        setLoadingTaks(false);\n      });\n  }, []);\n\n  if (task && !completed) {\n    setTimeout(() => {\n\n      if (TaskProgress !== 100) {\n        setTaskProgress(TaskProgress + 1);\n\n      } else {\n        startBreak(task);\n      }\n    }, 15000);\n  }\n\n  if (breakTask) {\n    setTimeout(() => {\n\n      if (breakProgress !== 100) {\n        setBreakProgress(breakProgress + 1);\n      } else {\n        startCompleted(breakTask);\n      }\n    }, cycle % 4 ? 3000 : 9000);\n  }\n\n  /* handlers */\n\n  const startTask = (id) => {\n\n    if (task) {\n\n      if (task === id) {\n        startBreak(task);\n\n      } else {\n        setCompleted(task);\n        setTask(id);\n      }\n      return;\n    }\n\n    setTaskProgress(0);\n    setTask(id);\n  };\n\n  const startBreak = () => {\n    setTaskProgress(100);\n    setAudio(true);\n    setTask(null);\n\n    if (breakTask) {\n      startCompleted(breakTask);\n    }\n\n    setBreakProgress(0);\n    setBreakTask(task);\n  };\n\n  const startCompleted = (id) => {\n    setAudio(true);\n    setCycle(cycle % 4 ? cycle + 1 : 1);\n    setBreakProgress(100);\n    setBreakTask(null);\n    setCompleted(id);\n  };\n\n  const createTask = async () => {\n\n    if (!title) {\n      setAlert('Please enter a title');\n      setTimeout(() => setAlert(''), 5000);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const res = await doCreateNote(authContext.token, title, description ? description : null);\n      setTasks(tasks.concat({\n        id: res.data.id,\n        title: res.data.title,\n        description: res.data.description,\n      }));\n      setTitle('');\n      setDescription('');\n      setSnack('Task created');\n\n    } catch (e) {\n      console.log(e);\n      setAlert('Something went wrong while creating a new task');\n      setTimeout(() => setAlert(''), 5000);\n    }\n    setLoading(false);\n  };\n\n  const removeTask = async (id) => {\n\n    try {\n      await doRemoveNote(authContext.token, id);\n      setTasks(tasks.filter((task) => task.id !== id));\n      setSnack('Task removed');\n\n    } catch (e) {\n      console.log(e.error);\n      setAlert('Something went wrong while deleting the task');\n      setTimeout(() => setAlert(''), 5000);\n    }\n\n  };\n\n  const currentTaskTitle = (id) => {\n\n    for (const task of tasks) {\n      if (task.id === id) {\n        return ` (${task.title})`;\n      }\n    }\n  };\n\n  /* return tasks */\n\n  return (\n    <Row id={'main'}>\n      {loadingTaks \n        ? <LinearProgress id={'lp'} color={'inherit'} />\n        : <span id={'lp'}></span>}\n\n      <Col />\n      <Col xs={'auto'}>\n\n        {\n          tasks.map((t, i) => (\n            <Task\n              key={i}\n              startHandler={startTask}\n              deleteHandler={removeTask}\n              id={t.id}\n              title={t.title}\n              description={t.description}\n              progress={task && t.id === task ? TaskProgress : 100}\n            />\n          ))\n        }\n\n        <Card id={'create'} >\n\n          <Container id={'container'}>\n            <Form>\n\n              <h4>\n                Create a new task!\n              </h4>\n\n              <Form.Group controlId={'title'} id={'in'}>\n                <Form.Control\n                  placeholder={'Enter a title'}\n                  onChange={(e) => setTitle(e.target.value)}\n                  value={title}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"description\" id={'in'}>\n                <Form.Control\n                  placeholder={'Enter a description (optional)'}\n                  onChange={(e) => setDescription(e.target.value)}\n                  value={description}\n                />\n              </Form.Group>\n\n              <div id={'buttonHolder'}>\n\n                <Button id={'button'} variant=\"danger\" onClick={createTask}>\n                  Create\n                </Button>\n\n                {loading && <CircularProgress color={'inherit'} />}\n\n              </div>\n\n            </Form>\n          </Container>\n\n        </Card>\n\n        <div id={'alertDiv'}>\n\n          {alert && <Alert\n            id={'alert'}\n            open={alert && true}\n            onClose={() => setAlert('')}\n            severity={'error'}\n            sx={{\n              borderRadius: '1rem',\n              marginTop: '5px',\n              maxWidth: '100%'\n            }}\n          >{alert}</Alert>}\n\n        </div>\n\n      </Col>\n      <Col />\n\n      <Modal\n        open={!!breakTask}\n        onClose={() => () => startCompleted(breakTask)}\n      >\n        <Box sx={{\n          borderRadius: '1rem',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          border: 'none',\n          boxShadow: 24,\n          p: 4,\n        }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Time to take a break!\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {'You have been working hard; take some to chill and recharge. We will notify you when it\\'s time to get back to work.'}\n          </Typography>\n\n          <br />\n\n          <div id={'breakBar'}>\n            <LinearProgress variant={'determinate'} color={'inherit'} value={breakProgress} />\n          </div>\n\n          <br />\n\n          <div>\n\n            <Button variant={'danger'} id={'genButton'} onClick={() => startCompleted(breakTask)}>Skip Break</Button>\n\n          </div>\n\n        </Box>\n      </Modal>\n\n      <Modal\n        open={!!completed}\n        onClose={() => () => setCompleted(null)}\n      >\n        <Box sx={{\n          borderRadius: '1rem',\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          border: 'none',\n          boxShadow: 24,\n          p: 4,\n        }}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Did you complete the task?\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n            {`Did you complete the task you have been working on${currentTaskTitle(completed)}?`}\n          </Typography>\n\n          <br />\n\n          <Button\n            style={{\n              marginBottom: '.5rem'\n            }}\n            variant={'danger'}\n            id={'genButton'}\n            onClick={() => {\n              removeTask(completed).then(() => {\n                setCompleted(null);\n              });\n            }}\n          >\n            Yes! Go ahead and remove it.\n          </Button>\n\n          <Button\n            variant={'danger'}\n            id={'genButton'}\n            onClick={() => {\n              setCompleted(null);\n            }}\n          >\n            No! Keep it there.</Button>\n\n        </Box>\n      </Modal>\n\n      <Snackbar\n        open={!!snack}\n        autoHideDuration={5000}\n        onClose={() => setSnack('')}\n        message={snack}\n      />\n\n      <ReactHowler preload={true} playing={audio} onEnd={() => setAudio(false)} src={notification} />\n\n    </Row>\n\n  );\n};\n\nexport default Tasks;","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../context/AuthContext';\nimport LogContext from '../context/LogContext';\nimport { Navigate } from 'react-router-dom';\n\nconst Protect = ({ children }) => {\n  const authContext = useContext(AuthContext);\n  const logContext = useContext(LogContext);\n\n  useEffect(() => {\n    if (!authContext.token) {\n      logContext.setError('You must be logged in to view this page.');\n    }\n  }, []);\n\n  if (!authContext.token) {\n    return <Navigate to=\"/login\" />;\n\n  } else {\n    return children;\n  }\n};\n\nProtect.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Protect;","import React, { useEffect, useContext } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Verify from './pages/Verify';\nimport Tasks from './pages/Tasks';\nimport AuthContext from './context/AuthContext';\nimport Protect from './components/Protect';\n\nconst App = () => {\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.check();\n  }, [authContext.token]);\n\n  return (\n    <>\n      <NavBar />\n\n      <Router>\n\n        <Routes>\n\n          <Route path={'/login'} element={\n            <Login />\n          } />\n\n          <Route path={'/register'} element={\n            <Register />\n          } />\n\n          <Route path={'/verify'} element={\n            <Protect><Verify /></Protect>\n          } />\n\n          <Route path={'/tasks'} element={\n            <Protect><Tasks /></Protect>\n          } />\n\n        </Routes>\n\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { AuthContextProvider } from './context/AuthContext';\nimport { LogContextProvider } from './context/LogContext';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <LogContextProvider>\n        <App />\n      </LogContextProvider>\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}